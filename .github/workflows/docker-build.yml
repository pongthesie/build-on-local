name: build-and-push-ocr-app

on:
  push:
    branches: [ "main", "dev" ]
  workflow_dispatch:

# ให้สิทธิ์เขียน packages สำหรับ GHCR
permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: self-hosted  # ถ้า runner ของคุณมี label แค่ self-hosted ก็พอ

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set IMAGE name (lowercase owner)
        run: |
          echo "OWNER_LC=${OWNER,,}" >> $GITHUB_ENV
          echo "IMAGE=ghcr.io/${OWNER_LC}/ocr-app" >> $GITHUB_ENV
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR (GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Smoke test imports
        run: |
          set -eux
          docker run --rm ${{ env.IMAGE }}:latest python - <<'PY'
          import importlib, traceback
          mods = ["flask","fastapi","uvicorn","sqlalchemy","paddle","paddleocr"]
          for m in mods:
              print("== Test import:", m)
              try:
                  mod = importlib.import_module(m)
                  print("OK:", m, getattr(mod,"__version__","n/a"))
              except Exception:
                  print("FAIL:", m); traceback.print_exc(); raise
          PY

      - name: Show pushed image info
        run: echo "Image pushed to ${{ env.IMAGE }}"
